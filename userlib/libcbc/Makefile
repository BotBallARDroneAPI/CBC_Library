#############################################################################
# Makefile for building: libcbc.a
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sun Dec 2 15:11:32 2012
# Project:  libcbc.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile libcbc.pro
#############################################################################

####### Compiler, tools and options

CC            = /usr/arm-linux/bin/gcc 
CXX           = /usr/arm-linux/bin/g++ 
DEFINES       = -DQT_WEBKIT
CFLAGS        = -pipe -O2 -D_REENTRANT -fPIC -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -D_REENTRANT -fPIC -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I. -Isrc -I../../utils/shared_mem -I../libcommonc++
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/botball.c \
		src/cbc.c \
		src/compat.c \
		src/process.c \
		src/cbcserial.c \
		src/create.c \
		src/ATCommand.cpp \
		src/CommunicationChannel.cpp \
		src/NavigationData.cpp \
		src/NavigationDataReceiver.cpp \
		src/VideoDataReceiver.cpp \
		src/VideoDecoder.cpp \
		src/Drone.cpp \
		src/ARDroneAPI.cpp \
		src/Controller.cpp 
OBJECTS       = botball.o \
		cbc.o \
		compat.o \
		process.o \
		cbcserial.o \
		create.o \
		ATCommand.o \
		CommunicationChannel.o \
		NavigationData.o \
		NavigationDataReceiver.o \
		VideoDataReceiver.o \
		VideoDecoder.o \
		Drone.o \
		ARDroneAPI.o \
		Controller.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		libcbc.pro
QMAKE_TARGET  = cbc
DESTDIR       = 
TARGET        = libcbc.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: libcbc.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile libcbc.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/staticlib.prf:
/usr/share/qt4/mkspecs/features/static.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile libcbc.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/cbc1.0.0 || $(MKDIR) .tmp/cbc1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/cbc1.0.0/ && (cd `dirname .tmp/cbc1.0.0` && $(TAR) cbc1.0.0.tar cbc1.0.0 && $(COMPRESS) cbc1.0.0.tar) && $(MOVE) `dirname .tmp/cbc1.0.0`/cbc1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/cbc1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

botball.o: src/botball.c src/botball.h \
		src/compat.h \
		src/create.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o botball.o src/botball.c

cbc.o: src/cbc.c src/cbc.h \
		src/compat.h \
		../../cbcui/src/UIData.h \
		../../kernel/cbob/cbob.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o cbc.o src/cbc.c

compat.o: src/compat.c src/compat.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o compat.o src/compat.c

process.o: src/process.c src/process.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o process.o src/process.c

cbcserial.o: src/cbcserial.c src/cbcserial.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o cbcserial.o src/cbcserial.c

create.o: src/create.c src/create.h \
		src/compat.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o create.o src/create.c

ATCommand.o: src/ATCommand.cpp src/ATCommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ATCommand.o src/ATCommand.cpp

CommunicationChannel.o: src/CommunicationChannel.cpp src/CommunicationChannel.h \
		src/ATCommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CommunicationChannel.o src/CommunicationChannel.cpp

NavigationData.o: src/NavigationData.cpp src/NavigationData.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NavigationData.o src/NavigationData.cpp

NavigationDataReceiver.o: src/NavigationDataReceiver.cpp src/NavigationDataReceiver.h \
		src/MemoryLibrary.h \
		src/NavigationData.h \
		src/Controller.h \
		src/CommunicationChannel.h \
		src/ATCommand.h \
		src/DroneConstants.h \
		src/compat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NavigationDataReceiver.o src/NavigationDataReceiver.cpp

VideoDataReceiver.o: src/VideoDataReceiver.cpp src/VideoDataReceiver.h \
		src/Controller.h \
		src/CommunicationChannel.h \
		src/ATCommand.h \
		src/NavigationData.h \
		src/DroneConstants.h \
		src/VideoDecoder.h \
		src/compat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o VideoDataReceiver.o src/VideoDataReceiver.cpp

VideoDecoder.o: src/VideoDecoder.cpp src/VideoDecoder.h \
		src/DroneConstants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o VideoDecoder.o src/VideoDecoder.cpp

Drone.o: src/Drone.cpp src/Drone.h \
		src/Controller.h \
		src/CommunicationChannel.h \
		src/ATCommand.h \
		src/NavigationData.h \
		src/DroneConstants.h \
		src/VideoDataReceiver.h \
		src/VideoDecoder.h \
		src/NavigationDataReceiver.h \
		src/MemoryLibrary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Drone.o src/Drone.cpp

ARDroneAPI.o: src/ARDroneAPI.cpp src/ARDroneAPI.h \
		src/Controller.h \
		src/CommunicationChannel.h \
		src/ATCommand.h \
		src/NavigationData.h \
		src/DroneConstants.h \
		src/compat.h \
		src/process.h \
		src/Drone.h \
		src/VideoDataReceiver.h \
		src/VideoDecoder.h \
		src/NavigationDataReceiver.h \
		src/MemoryLibrary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ARDroneAPI.o src/ARDroneAPI.cpp

Controller.o: src/Controller.cpp src/Controller.h \
		src/CommunicationChannel.h \
		src/ATCommand.h \
		src/NavigationData.h \
		src/DroneConstants.h \
		src/Drone.h \
		src/VideoDataReceiver.h \
		src/VideoDecoder.h \
		src/NavigationDataReceiver.h \
		src/MemoryLibrary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Controller.o src/Controller.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

